service: medivoice-ai-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION, 'us-east-1'}
  stage: ${env:STAGE, 'dev'}
  environment:
    AUDIO_BUCKET_NAME: ${env:AUDIO_BUCKET_NAME}
    PDF_BUCKET_NAME: ${env:PDF_BUCKET_NAME}
    CONSULTATIONS_TABLE: ${env:CONSULTATIONS_TABLE}
    PROMPTS_TABLE: ${env:PROMPTS_TABLE}
    DOCTORS_TABLE: ${env:DOCTORS_TABLE}
    BEDROCK_MODEL_ID: ${env:BEDROCK_MODEL_ID, 'anthropic.claude-3-sonnet-20240229-v1:0'}
    ENVIRONMENT: ${env:STAGE, 'dev'}
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${env:AUDIO_BUCKET_NAME}/*
            - arn:aws:s3:::${env:AUDIO_BUCKET_NAME}
            - arn:aws:s3:::${env:PDF_BUCKET_NAME}/*
            - arn:aws:s3:::${env:PDF_BUCKET_NAME}
        
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:*:*:table/${env:CONSULTATIONS_TABLE}
            - arn:aws:dynamodb:*:*:table/${env:CONSULTATIONS_TABLE}/index/*
            - arn:aws:dynamodb:*:*:table/${env:PROMPTS_TABLE}
            - arn:aws:dynamodb:*:*:table/${env:PROMPTS_TABLE}/index/*
            - arn:aws:dynamodb:*:*:table/${env:DOCTORS_TABLE}
            - arn:aws:dynamodb:*:*:table/${env:DOCTORS_TABLE}/index/*
        
        - Effect: Allow
          Action:
            - transcribe:StartMedicalTranscriptionJob
            - transcribe:GetMedicalTranscriptionJob
            - transcribe:ListMedicalTranscriptionJobs
          Resource: "*"
        
        - Effect: Allow
          Action:
            - bedrock:InvokeModel
            - bedrock:InvokeModelWithResponseStream
          Resource:
            - arn:aws:bedrock:*::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0
            - arn:aws:bedrock:*::foundation-model/anthropic.claude-3-haiku-20240307-v1:0
            - arn:aws:bedrock:*::foundation-model/anthropic.claude-3-opus-20240229-v1:0

functions:
  uploadAudio:
    handler: src/functions/uploadAudio.handler
    events:
      - http:
          path: /api/audio
          method: post
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: ${env:COGNITO_USER_POOL_ARN}
    
    environment:
      AUDIO_BUCKET_NAME: ${env:AUDIO_BUCKET_NAME}
    
    timeout: 30
    memorySize: 512

  processAudio:
    handler: src/functions/processAudio.handler
    events:
      - http:
          path: /api/audio/process
          method: post
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: ${env:COGNITO_USER_POOL_ARN}
    
    environment:
      AUDIO_BUCKET_NAME: ${env:AUDIO_BUCKET_NAME}
      PDF_BUCKET_NAME: ${env:PDF_BUCKET_NAME}
      CONSULTATIONS_TABLE: ${env:CONSULTATIONS_TABLE}
      PROMPTS_TABLE: ${env:PROMPTS_TABLE}
      DOCTORS_TABLE: ${env:DOCTORS_TABLE}
      BEDROCK_MODEL_ID: ${env:BEDROCK_MODEL_ID, 'anthropic.claude-3-sonnet-20240229-v1:0'}
    
    timeout: 300
    memorySize: 1024

  generatePDF:
    handler: src/functions/generatePDF.handler
    events:
      - http:
          path: /api/pdf
          method: post
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: ${env:COGNITO_USER_POOL_ARN}
    
    environment:
      PDF_BUCKET_NAME: ${env:PDF_BUCKET_NAME}
      CONSULTATIONS_TABLE: ${env:CONSULTATIONS_TABLE}
      DOCTORS_TABLE: ${env:DOCTORS_TABLE}
    
    timeout: 60
    memorySize: 512

  getHistory:
    handler: src/functions/getHistory.handler
    events:
      - http:
          path: /api/history
          method: get
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: ${env:COGNITO_USER_POOL_ARN}
    
    environment:
      CONSULTATIONS_TABLE: ${env:CONSULTATIONS_TABLE}
      DOCTORS_TABLE: ${env:DOCTORS_TABLE}
    
    timeout: 30
    memorySize: 512

resources:
  Resources:
    CognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: cognitoAuthorizer
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        RestApiId: !Ref ApiGatewayRestApi
        ProviderARNs:
          - ${env:COGNITO_USER_POOL_ARN}

plugins:
  - serverless-plugin-typescript

custom:
  stage: ${env:STAGE, 'dev'}
  region: ${env:AWS_REGION, 'us-east-1'} 